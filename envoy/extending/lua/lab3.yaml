static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: some_route
            virtual_hosts:
            - name: some_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body:
                    inline_string: "200"
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                local library = require("library")
                function envoy_on_request(request_handle)
                  local headers = request_handle:headers()
                  local metadata = request_handle:streamInfo():dynamicMetadata()
                  metadata:set("envoy.filters.http.lua", "requestInfo", {
                      requestId = headers:get("my-request-id"),
                      method = headers:get(":method"),
                    })
                end
                function envoy_on_response(response_handle)
                  local requestInfoObj = response_handle:streamInfo():dynamicMetadata():get("envoy.filters.http.lua")["requestInfo"]

                  local requestId = requestInfoObj.requestId
                  local method = requestInfoObj.method
                  if (requestId == nil or requestId == '') and (method == 'GET') then
                    response_handle:logInfo("Adding request ID header")
                    response_handle:headers():add("my-request-id", library.RandomString())
                  end
                end
          - name: envoy.filters.http.router
            typed_config: 
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router